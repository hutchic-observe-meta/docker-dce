---
name: Build and Optionally Release

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
    - main

jobs:
  build_release:
    name: Build & Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: crazy-max/ghaction-docker-meta@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/docker-dce
        tags: |
          type=ref,event=branch
          type=sha

    - name: Build docker image (dry-run)
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=gha
          ghcr.io/${{ github.repository_owner }}/docker-dce:latest
          ghcr.io/${{ github.repository_owner }}/docker-dce:main
        cache-to: type=gha,mode=max

    - name: Semantic Release
      id: release
      uses: ahmadnassri/action-semantic-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta (with version)
      if: steps.release.outputs.published == 'true'
      id: meta_versioned
      uses: crazy-max/ghaction-docker-meta@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/docker-dce
        tags: |
          type=semver,pattern={{version}},value=${{ steps.release.outputs.release-version }}
          type=ref,event=branch
          type=sha

    - name: Build docker image and Push (for release)
      if: steps.release.outputs.published == 'true'
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta_versioned.outputs.tags }}
        labels: ${{ steps.meta_versioned.outputs.labels }}
        cache-from: |
          type=gha
          ghcr.io/${{ github.repository_owner }}/docker-dce:latest
          ghcr.io/${{ github.repository_owner }}/docker-dce:main
        cache-to: type=gha,mode=max
